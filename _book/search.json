[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cartographie avec R",
    "section": "",
    "text": "Créer des cartes thématiques conformes aux règles de la sémiologie graphique et de la cartographie avec R.\nL’objectif de ce document est de fournir un support à l’apprentissage de la cartographie avec R.\nComment utiliser le manuel\nLe projet RStudio contenant l’ensemble des données utilisées dans le manuel est disponible ici. Une fois le dossier décompressé il est possible de tester l’ensemble des manipulations proposées dans le projet RStudio.\nContribution et feedback\nVous pouvez nous envoyer vos remarques et suggestions en postant une issue sur le dépôt GitHub de ce document."
  },
  {
    "objectID": "ecosys.html",
    "href": "ecosys.html",
    "title": "1  L’écosystème spatial de R",
    "section": "",
    "text": "Historiquement, 4 packages permettent d’importer, de manipuler et de transformer les données spatiales :\n\nLe package rgdal (R. Bivand, Keitt, and Rowlingson 2018) qui est une interface entre R et les librairies GDAL (GDAL/OGR contributors, n.d.) et PROJ (PROJ contributors 2021) permet d’importer et d’exporter les données spatiales (les shapefiles par exemple) et aussi de gérer les projections cartographiques\n\nLe package sp (Pebesma and Bivand 2018) fournit des classes et méthodes pour les données spatiales vectorielles dans R. Il permet afficher des fond de cartes, d’inspecter une table attributaire etc.\n\nLe package rgeos (R. Bivand and Rundel 2018) donne accès à la librairie d’opérations spatiales GEOS et rend donc disponible les opérations SIG classiques : calcul de surfaces ou de périmètres, calcul de distances, agrégations spatiales, zones tampons, intersections etc.\n\nLe package raster (Hijmans 2021a) est dédié à l’import, la mabipulation et la modélisation des données raster.\n\nAujourd’hui, les principaux développements concernants les données vectorielles se sont détachés des 3 anciens (sp, rgdal, rgeos) pour se reposer principalement sur le package sf ((Pebesma 2018a), (Pebesma 2018b)). Dans ce manuel nous nous appuierons exclusivement sur ce package pour manipuler les données vectorielles.\nLes packages stars (Pebesma 2021) et terra(Hijmans 2021b) sont venus quand à eux remplacer le package raster pour le traitement des données raster. Nous avons choisi d’utiliser ici le package terra pour sa proximité avec le package raster.\n\n\n\n\n\n\nEn savoir plus sur l’écosysteme spatial de R\n\n\n\nArticle :\nProgress in the R ecosystem for representing and handling spatial data (R. S. Bivand 2020)\nCRAN Task View :\nAnalysis of Spatial Data\nListe de discussion :\nR Special Interest Group on using Geographical data and Mapping\nManuel en anglais :\nGeocomputation with R (Lovelace, Nowosad, and Muenchow 2019)"
  },
  {
    "objectID": "ecosys.html#le-package-sf",
    "href": "ecosys.html#le-package-sf",
    "title": "1  L’écosystème spatial de R",
    "section": "1.2 Le package sf",
    "text": "1.2 Le package sf\n Le package sf a été publié fin 2016 par Edzer Pebesma (également auteur de sp). Son objectif est de combiner les fonctionnalités de sp, rgeos et rgdal dans un package unique plus ergonomique. Ce package propose des objets plus simples (suivant le standard simple feature) dont la manipulation est plus aisée. Une attention particulière a été portée à la compatibilité du package avec la syntaxe pipe et les opérateurs du tidyverse.\nsf utilise directement les librairies GDAL, GEOS et PROJ.\n\n\n\nFrom r-spatial.org\n\n\n\n\n\n\n\n\nSite web du package sf\n\n\n\nSimple Features for R"
  },
  {
    "objectID": "ecosys.html#le-package-terra",
    "href": "ecosys.html#le-package-terra",
    "title": "1  L’écosystème spatial de R",
    "section": "1.3 Le package terra",
    "text": "1.3 Le package terra\n Le package terra a été publié début 2020 par Robert J. Hijmans (également auteur de raster). Son objectif est de proposer des méthodes de traitement et d’analyse de données rasrer. Ce package est très similaire au package raster; mais il propose plus de fonctionnalités, il est plus facile à utiliser et il est plus rapide.\n\n\n\n\n\n\nSite web du package terra :\n\n\n\nSpatial Data Science with R and “terra”\n\n\n\n\n\n\nBivand, Roger S. 2020. “Progress in the r Ecosystem for Representing and Handling Spatial Data.” Journal of Geographical Systems, 1–32.\n\n\nBivand, Roger, Tim Keitt, and Barry Rowlingson. 2018. Rgdal: Bindings for the ’Geospatial’ Data Abstraction Library. https://CRAN.R-project.org/package=rgdal.\n\n\nBivand, Roger, and Colin Rundel. 2018. Rgeos: Interface to Geometry Engine - Open Source (’GEOS’). https://CRAN.R-project.org/package=rgeos.\n\n\nGDAL/OGR contributors. n.d. GDAL/OGR Geospatial Data Abstraction Software Library. Open Source Geospatial Foundation. https://gdal.org.\n\n\nHijmans, Robert J. 2021a. Raster: Geographic Data Analysis and Modeling. https://CRAN.R-project.org/package=raster.\n\n\n———. 2021b. Terra: Spatial Data Analysis. https://CRAN.R-project.org/package=terra.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2019. Geocomputation with r. CRC Press. https://geocompr.robinlovelace.net/.\n\n\nPebesma, Edzer. 2018a. Sf: Simple Features for r. https://CRAN.R-project.org/package=sf.\n\n\n———. 2018b. “Simple Features for R: Standardized Support for Spatial Vector Data.” The R Journal. https://journal.r-project.org/archive/2018/RJ-2018-009/index.html.\n\n\n———. 2021. Stars: Spatiotemporal Arrays, Raster and Vector Data Cubes. https://CRAN.R-project.org/package=stars.\n\n\nPebesma, Edzer, and Roger Bivand. 2018. Sp: Classes and Methods for Spatial Data. https://CRAN.R-project.org/package=sp.\n\n\nPROJ contributors. 2021. PROJ Coordinate Transformation Software Library. Open Source Geospatial Foundation. https://proj.org/."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  mapsf",
    "section": "",
    "text": "L’écosystème spatial du logiciel libre R est riche, dynamique et mature et plusieurs packages permettent d’importer, de traiter et de représenter les données spatiales. Le package mapsf (Giraud 2021) s’appuie sur cet écosystème pour intégrer la création de cartes thématiques de qualité dans les chaînes de traitement avec R.\nD’autres packages peuvent être utilisés pour réaliser des cartes thématiques. Le package ggplot2 (Wickham 2016), en association avec le package ggspatial (Dunnington 2021), permet par exemple d’afficher des objets spatiaux et de réaliser des cartes thématiques simples. Le package tmap (Tennekes 2018) est dédié à la création de cartes thématiques, il utilise une syntaxe proche de celle de ggplot2 (enchaînement d’instructions combinées avec le signe ‘+’). La documentation et les tutoriels pour utiliser ces deux packages sont facilement accessibles sur le web.\nIci, nous utiliserons principalement le package mapsf dont les fonctionnalités sont assez complètes et la prise en main plutôt simple. De plus, le package est relativement léger."
  },
  {
    "objectID": "intro.html#présentation",
    "href": "intro.html#présentation",
    "title": "2  mapsf",
    "section": "2.1 Présentation",
    "text": "2.1 Présentation\n\nmapsf permet de créer la plupart des types de carte utilisés habituellement en cartographie statistique (cartes choroplèthes, typologies, symboles proportionnels ou gradués…).\nPour chaque type de carte, plusieurs paramètres permettent de personnaliser la représentation cartographique. Ces paramètres sont les mêmes que ceux que l’on retrouve dans les logiciels de SIG ou de cartographie usuels (par exemple, le choix des discrétisations et des palettes de couleurs, la modification de de la taille des symboles ou la personnalisation des légendes).\nAssociées aux fonctions de représentation des données d’autres fonctions sont dédiées à l’habillage cartographique (thèmes ou chartes graphiques, légendes, échelles, flèches d’orientation, titre, crédits, annotations…), à la création de cartons ou à l’export des cartes.\nmapsf est le successeur de cartography (Giraud and Lambert 2018), il offre les mêmes fonctionnalités principales tout en étant plus léger et plus ergonomique."
  },
  {
    "objectID": "intro.html#documentation",
    "href": "intro.html#documentation",
    "title": "2  mapsf",
    "section": "2.2 Documentation",
    "text": "2.2 Documentation\nPour utiliser ce package plusieurs sources peuvent être consultées :\n\nLa documentation du package accessible sur internet ou directement dans R (?mapsf),\nUne cheat sheet,\n\n\n\n\n\n\n\n\n\n\n\nLes vignettes associées au package présentent des exemples de scripts,\nLe blog R Géomatique qui met à disposition ressources et exemples liés au package et plus généralement à l’écosystème spatial de R.\n\n\n\n\n\nDunnington, Dewey. 2021. ggspatial: Spatial Data Framework for ggplot2. https://CRAN.R-project.org/package=ggspatial.\n\n\nGiraud, Timothée. 2021. Mapsf: Thematic Cartography.\n\n\nGiraud, Timothée, and Nicolas Lambert. 2018. Cartography: Thematic Cartography. https://github.com/riatelab/cartography/.\n\n\nTennekes, Martijn. 2018. “tmap: Thematic Maps in R.” Journal of Statistical Software 84 (6): 1–39. https://doi.org/10.18637/jss.v084.i06.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "type_de_carte.html",
    "href": "type_de_carte.html",
    "title": "3  Les types de cartes",
    "section": "",
    "text": "La fonction mf_map() est la fonction centrale du package mapsf. Elle permet de réaliser la plupart des représentations usuelles en cartographie. Ces arguments principaux sont :"
  },
  {
    "objectID": "type_de_carte.html#les-données-dexemple",
    "href": "type_de_carte.html#les-données-dexemple",
    "title": "3  Les types de cartes",
    "section": "3.1 Les données d’exemple",
    "text": "3.1 Les données d’exemple\nLes lignes suivantes importent les couches d’information spatiales situées dans le fichier geopackage lot46.gpkg.\n\nlibrary(sf)\n# import des communes du Lot\ncom <- st_read(\"data/lot46.gpkg\", layer = \"commune\", quiet = TRUE)\n# import des départments français\ndep <- st_read(\"data/lot46.gpkg\", layer = \"departement\", quiet = TRUE)\n# import des restaurants\nresto <- st_read(\"data/lot46.gpkg\", layer = \"restaurant\", quiet = TRUE)\n# import des routes\nroute <- st_read(\"data/lot46.gpkg\", layer = \"route\", quiet = TRUE)"
  },
  {
    "objectID": "type_de_carte.html#afficher-un-fond-de-carte",
    "href": "type_de_carte.html#afficher-un-fond-de-carte",
    "title": "3  Les types de cartes",
    "section": "3.2 Afficher un fond de carte",
    "text": "3.2 Afficher un fond de carte\nUtilisée sans précision de type, la fonction mf_map() affiche simplement le fond de carte.\n\nlibrary(mapsf)\n# Communes\nmf_map(x = com, border = \"white\")\nmf_map(x = dep, lwd = 2, col = NA, add = TRUE)\nmf_map(x = route, lwd = .5, col = \"ivory4\", add = TRUE)\nmf_map(x = resto, pch = 20, cex = .7, col = \"darkred\", add = TRUE)"
  },
  {
    "objectID": "type_de_carte.html#carte-de-symboles-proportionnels",
    "href": "type_de_carte.html#carte-de-symboles-proportionnels",
    "title": "3  Les types de cartes",
    "section": "3.3 Carte de symboles proportionnels",
    "text": "3.3 Carte de symboles proportionnels\nLes cartes de symboles proportionnels sont utilisées pour représenter les variables de stocks (variables quantitatives absolues, la somme et la moyenne ont un sens). La fonction mf_map(..., type = \"prop\") propose cette représentation.\n\n# Communes\nmf_map(x = com)\n# Symboles proportionnels\nmf_map(\n  x = com, \n  var = \"POPULATION\",\n  type = \"prop\",\n  leg_title = \"Population totale\\n(2015)\"\n)\n# Titre\nmf_title(\"Distribution de la population dans le Lot\")\n\n\n\n\n\n\n\n\n\n3.3.1 Comparer plusieurs cartes\nIl est possible de fixer les dimensions du plus grand symbole correspondant à une certaine valeur avec les arguments inches et val_max. Nous pouvons ainsi construire des cartes en symboles proportionnels comparables.\n\n# Afficher deux cartes en vis-à-vis\npar(mfrow = c(1,2))\n# Communes\nmf_map(x = com, border = \"grey90\", lwd = .5)\n# Population active occupée dans l'industrie, les hommes\nmf_map(\n  x = com, \n  var = \"IND_H\", \n  type = \"prop\", \n  inches = .2, \n  val_max = 600, \n  leg_title = \"Hommes\", \n  leg_val_cex = .5,\n)\n# ajout d'un titre\nmf_title(\"Population active occupée dans l'industrie\")\n\n# Communes\nmf_map(x = com, border = \"grey90\", lwd = .5)\n# Population active occupée dans l'industrie, les femmes\nmf_map(\n  x = com, \n  var = \"IND_F\", \n  type = \"prop\",\n  inches = .2, \n  val_max = 600, \n  leg_title =\"Femmes\", \n  leg_val_cex = .5\n)\n\n# ajout d'un titre\nmf_title(\"Population active occupée dans l'industrie\")\n\n\n\n\n\n\n\n\nNous avons ici affiché deux cartes en vis-à-vis, voir le point Afficher plusieurs cartes sur la même figure pour plus de détails."
  },
  {
    "objectID": "type_de_carte.html#carte-choroplèthe",
    "href": "type_de_carte.html#carte-choroplèthe",
    "title": "3  Les types de cartes",
    "section": "3.4 Carte choroplèthe",
    "text": "3.4 Carte choroplèthe\nLes cartes choroplèthes sont utilisées pour représenter les variables de ratios (variables quantitatives relatives, la moyenne a un sens, la somme n’a pas de sens).\nPour ce genre de représentation il faut au préalable :\n\nchoisir une méthode de discrétisation pour transformer une série statistique continue en classes définies par des intervalles,\nchoisir un nombre de classes,\nchoisir une palette de couleurs.\n\nLa fonction mf_map(..., type = \"choro\") permet de créer des cartes choroplètes. Les arguments nbreaks et breaks servent à paramétrer les discrétisations, et la fonction mf_get_breaks() permet de travailler sur les discrétisations en dehors de la fonction mf_map(). De même, l’argument pal est utilisé pour renseigner une palette de couleur, mais plusieurs fonctions peuvent être utilisées pour paramétrer les palettes en dehors de la fonction (mf_get_pal…).\n\n# Densité de population (hab./km2) en utilisant la fonction sf::st_area()\ncom$DENS <- 1e6 * com$POP / as.numeric(st_area(com))\nmf_map(\n  x = com,\n  var = \"DENS\",\n  type = \"choro\",\n  breaks = \"quantile\",\n  pal = \"Dark Mint\",\n  lwd = 1,\n  leg_title = \"Densité de population\\n(habitants par km2)\", \n  leg_val_rnd = 0\n)\nmf_title(\"Distribution de la population dans le Lot (2018)\")\n\n\n\n\n\n\n\n\n\n3.4.1 Discrétisations\nLa fonction mf_get_breaks() met à disposition les méthodes de discrétisations de variables classique : quantiles, moyenne/écart-type, amplitudes égales, moyennes emboîtées, Fisher-Jenks, géométrique …\n\ncom$POP_ACT <- \n  com$AGR_H + com$AGR_F + \n  com$IND_H + com$IND_F + \n  com$BTP_H + com$BTP_F + \n  com$TER_H + com$TER_F\ncom$SHARE_ACT <- 100 * com$POP_ACT / com$POPULATION\n\nd1 <- mf_get_breaks(com$SHARE_ACT, nbreaks = 6, breaks = \"equal\", freq = T)\nd2 <- mf_get_breaks(com$SHARE_ACT, nbreaks = 6, breaks = \"quantile\")\nd3 <- mf_get_breaks(com$SHARE_ACT, nbreaks = 6, breaks = \"geom\")\nd4 <- mf_get_breaks(com$SHARE_ACT, breaks = \"msd\", central = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n3.4.2 Palettes de couleurs\nL’argument pal de mf_map() est dédié au choix d’une palette de couleur. Les palettes fournies par la fonction hcl.colors() peuvent être utilisées directement.\n\nmf_map(x = com, var = \"SHARE_ACT\", type = \"choro\",\n       breaks = d4, pal = \"Blues 3\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nPalettes directement disponibles\n\n\n\n\nLa fonction mf_get_pal() permet de construire une palette de couleur. Cette fonction est surtout utile pour créer des palettes divergentes asymétriques équilibrées.\n\nmypal <- mf_get_pal(n = c(6,3), palette = c(\"Burg\", \"Teal\"))\nimage(1:9, 1, as.matrix(1:9), col=mypal, xlab = \"\", ylab = \"\", xaxt = \"n\",\n      yaxt = \"n\",bty = \"n\")\n\n\n\n\n\n\n\n\n\n\n3.4.3 Pour une couche de points\nIl est possible d’utiliser ce mode de représentation en implémentation ponctuelle également.\n\ncom_c <- st_centroid(com)\nmf_map(com)\nmf_map(\n  x = com_c,\n  var = \"DENS\",\n  type = \"choro\",\n  breaks = \"quantile\",\n  nbreaks = 4,\n  pal = \"Dark Mint\",\n  pch = 24,\n  cex = 2,\n  border = \"white\",\n  lwd = .7,\n  leg_pos = \"topleft\",\n  leg_title = \"Densité de population\\n(habitants par km2)\", \n  leg_val_rnd = 0, \n  add = TRUE\n)\nmf_title(\"Distribution de la population dans le Lot (2018)\")"
  },
  {
    "objectID": "type_de_carte.html#carte-de-typologie",
    "href": "type_de_carte.html#carte-de-typologie",
    "title": "3  Les types de cartes",
    "section": "3.5 Carte de typologie",
    "text": "3.5 Carte de typologie\nLes cartes de typologies sont utilisées pour représenter les variables qualitatives.\nLa fonction mf_map(..., type = \"typo\") propose cette représentation.\n\nmf_map(\n  x = com,\n  var=\"STATUT\",\n  type = \"typo\",\n  pal = c(\"aquamarine4\", \"yellow3\",\"wheat\"),\n  lwd = .7,\n  leg_title = \"\"\n)\nmf_title(\"Statut Administratif\")\n\n\n\n\n\n\n\n\n\n3.5.1 Ordonner les valeurs dans la légende\nL’argument val_order sert à ordonner les modalités dans la légende.\n\nmf_map(\n  x = com,\n  var=\"STATUT\",\n  type = \"typo\",\n  pal = c(\"aquamarine4\", \"yellow3\",\"wheat\"),\n  val_order = c(\"Préfecture\", \"Sous-préfecture\", \"Commune simple\"),\n  lwd = .7,\n  leg_title = \"\"\n)\nmf_title(\"Statut Administratif\")\n\n\n\n\n\n\n\n\n\n\n3.5.2 Les cartes de points\nQuand l’implantation de la couche est ponctuelle, des symboles sont utilisés pour porter les couleurs de la typologie.\n\n# extraction des centroides de la préfectures et des sous-préfectures\ncom_ctr <- st_centroid(com[com$STATUT != \"Commune simple\", ])\nmf_map(com)\nmf_map(\n  x = com_ctr, \n  var = \"STATUT\", \n  type = \"typo\", \n  cex = 3, \n  pch = 23, \n  pal = c(\"aquamarine4\", \"yellow3\"),\n  leg_title = \"\", \n  add = TRUE\n)\nmf_title(\"Statut Administratif\")\n\n\n\n\n\n\n\n\n\n\n3.5.3 Les cartes de lignes\n\n# Sélection des routes qui intersectent la commune de Cahors\ncahors <- com[com$NOM_COM == \"Cahors\", ]\nroute_cahors <- route[st_intersects(x = route, y = cahors, sparse = FALSE), ]\nmf_map(cahors)\nmf_map(\n  x = route_cahors,\n  var = \"VOCATION\",\n  type = \"typo\", \n  lwd = 2,\n  pal = mf_get_pal(n = 4, \"Dark 2\"),\n  leg_title = \"Type de route\",\n  add = TRUE\n)\nmf_title(\"Statut Administratif\")"
  },
  {
    "objectID": "type_de_carte.html#carte-de-stocks-et-de-ratios",
    "href": "type_de_carte.html#carte-de-stocks-et-de-ratios",
    "title": "3  Les types de cartes",
    "section": "3.6 Carte de stocks et de ratios",
    "text": "3.6 Carte de stocks et de ratios\nLa fonction mf_map(..., var = c(\"var1\", \"var2\"), type = \"prop_choro\") représente des symboles proportionnels dont les surfaces sont proportionnelles aux valeurs d’une variable et dont la couleur repose sur la discrétisation d’une seconde variable. La fonction utilise les arguments des fonctions mf_map(..., type = \"prop\") et mf_map(..., type = \"choro\").\n\nmf_map(x = com)\nmf_map(\n  x = com,\n  var = c(\"POPULATION\", \"DENS\"),\n  type = \"prop_choro\",\n  border = \"grey50\",\n  lwd = 1,\n  leg_pos = c(\"topright\", \"topleft\"),\n  leg_title = c(\"Population\", \"Densité\\nde population\\n(en hab./km2)\"),\n  breaks = \"q6\",\n  pal = \"Magenta\",\n  leg_val_rnd = c(0,1))\nmf_title(\"Population\")"
  },
  {
    "objectID": "type_de_carte.html#carte-de-stocks-et-de-catégories",
    "href": "type_de_carte.html#carte-de-stocks-et-de-catégories",
    "title": "3  Les types de cartes",
    "section": "3.7 Carte de stocks et de catégories",
    "text": "3.7 Carte de stocks et de catégories\nLa fonction mf_map(..., var = c(\"var1\", \"var2\"), type = \"prop_typo\") représente des symboles proportionnels dont les surfaces sont proportionnelles aux valeurs d’une variable et dont la couleur représente les modalités d’une variable qualitative. La fonction utilise les arguments des fonctions mf_map(..., type = \"prop\") et mf_map(..., type = \"typo\").\n\nmf_map(x = com)\nmf_map(\n  x = com,\n  var = c(\"POPULATION\", \"STATUT\"),\n  type = \"prop_typo\",\n  pal = c(\"aquamarine4\", \"yellow3\",\"wheat\"),\n  val_order = c(\"Préfecture\", \"Sous-préfecture\", \"Commune simple\"),\n  leg_pos = c(\"bottomleft\",\"topleft\"),\n  leg_title = c(\"Population\\n(2015)\",\n                \"Statut administratif\"),\n)\nmf_title(\"Population\")"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bivand, Roger S. 2020. “Progress in the r Ecosystem for\nRepresenting and Handling Spatial Data.” Journal of\nGeographical Systems, 1–32.\n\n\nBivand, Roger, Tim Keitt, and Barry Rowlingson. 2018. Rgdal:\nBindings for the ’Geospatial’ Data Abstraction Library. https://CRAN.R-project.org/package=rgdal.\n\n\nBivand, Roger, and Colin Rundel. 2018. Rgeos: Interface to Geometry\nEngine - Open Source (’GEOS’). https://CRAN.R-project.org/package=rgeos.\n\n\nDunnington, Dewey. 2021. ggspatial:\nSpatial Data Framework for ggplot2. https://CRAN.R-project.org/package=ggspatial.\n\n\nGDAL/OGR contributors. n.d. GDAL/OGR Geospatial Data\nAbstraction Software Library. Open Source Geospatial Foundation. https://gdal.org.\n\n\nGiraud, Timothée. 2021. Mapsf: Thematic Cartography.\n\n\nGiraud, Timothée, and Nicolas Lambert. 2018. Cartography: Thematic\nCartography. https://github.com/riatelab/cartography/.\n\n\nHijmans, Robert J. 2021a. Raster: Geographic Data Analysis and\nModeling. https://CRAN.R-project.org/package=raster.\n\n\n———. 2021b. Terra: Spatial Data Analysis. https://CRAN.R-project.org/package=terra.\n\n\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. 2019.\nGeocomputation with r. CRC Press. https://geocompr.robinlovelace.net/.\n\n\nPebesma, Edzer. 2018a. Sf: Simple Features for r. https://CRAN.R-project.org/package=sf.\n\n\n———. 2018b. “Simple Features for R:\nStandardized Support for Spatial Vector Data.”\nThe R Journal. https://journal.r-project.org/archive/2018/RJ-2018-009/index.html.\n\n\n———. 2021. Stars: Spatiotemporal Arrays, Raster and Vector Data\nCubes. https://CRAN.R-project.org/package=stars.\n\n\nPebesma, Edzer, and Roger Bivand. 2018. Sp: Classes and Methods for\nSpatial Data. https://CRAN.R-project.org/package=sp.\n\n\nPROJ contributors. 2021. PROJ Coordinate Transformation\nSoftware Library. Open Source Geospatial Foundation. https://proj.org/.\n\n\nTennekes, Martijn. 2018. “tmap:\nThematic Maps in R.” Journal of Statistical\nSoftware 84 (6): 1–39. https://doi.org/10.18637/jss.v084.i06.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data\nAnalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  }
]